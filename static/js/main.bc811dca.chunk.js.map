{"version":3,"sources":["components/documentation/DocumentComponent.js","components/generic/Loading.js","components/generic/Button.js","utils/helpers.js","components/generic/Circle.js","components/generic/Panel.js","components/generic/Label.js","components/generic/Input.js","components/generic/SquareButton.js","components/generic/QueueTimerPanel.js","views/DocumentationView.js","components/context/QueueContext.js","components/generic/FadeOut.js","components/generic/QueueOverview.js","components/generic/FadeIn.js","components/generic/NonActiveQueue.js","components/generic/SlidingBar.js","components/context/TimerContext.js","components/generic/TextDisplay.js","components/timers/Timer.js","components/generic/ActiveQueue.js","views/QueueView.js","components/generic/NavContainer.js","components/generic/SubLabel.js","components/generic/Settings.js","views/AddView.js","App.js","index.js"],"names":["Wrapper","styled","div","Container","Title","RenderComponent","Documentation","table","DocumentComponent","this","props","title","component","propDocs","map","doc","prop","description","type","defaultValue","React","Component","sizeMapping","small","medium","large","Dot","span","size","color","DotGroup","Loading","defaultProps","panelBackground","icons","play","faPlay","pause","faPause","faFastForward","reset","faUndo","setting","faCog","save","faCheck","x","faTimes","right","faArrowRight","left","faArrowLeft","colors","CircleButton","border","icon","Pulse","keyframes","top","Button","onClick","e","currentTarget","classList","add","addPulse","onAnimationEnd","remove","removePulse","calcRadius","strokeWidth","calcCircum","radius","Math","PI","formatNumber","int","toLocaleString","minimumIntegerDigits","useGrouping","convertFromMs","time","milliseconds","seconds","floor","minutes","calcTotalTime","timerType","minuteSetting","secondSetting","workLength","restLength","roundSetting","getButtonSize","width","window","innerWidth","ProgressCircle","circle","c","r","percent","circum","calcOffset","Circle","height","propType","PropTypes","number","Panel","Label","label","Input","input","Start","faBiking","Add","faPlusSquare","Edit","faHammer","ButtonLabel","enterFrom","SquareButton","clickHandler","Flipper","FlipContainer","disableHover","FrontSide","BackSide","panel_height","TopButtonRow","FlexDiv","PanelLabel","RelDiv","QueueTimerPanel","removeHandler","showRounds","showRoundType","style","position","QueueContext","createContext","QueueProvider","children","useState","timerQueue","setTimerQueue","totalTime","setTotalTime","totalLength","setTotalLength","Provider","value","addTimer","queue","newTimer","push","getTimers","index","amount","timers","i","undefined","removeTimer","timer","splice","FadeOut","PanelContainer","animate","keyFrame","css","slideDirection","TimersContainer","InnerTimersContainer","QueueOverview","useContext","currPos","setCurrPos","setTimers","slideFrom","setSlideFrom","animateIndex","setAnimateIndex","setKeyFrame","setDisableHover","setSlideDirection","leftPositions","hideLeft","hideRight","prevTotalLength","useRef","changePos","direction","useEffect","current","calcPosition","shouldAnimate","length","removePanel","FadeIn","TitlePanel","SubTitle","Flex","ButtonsContainer","NonActiveQueue","startHandler","showStart","setShowStart","formattedTime","history","useHistory","showTime","transitionCurve","iconsList","Stopwatch","faStopwatch","Countdown","faHourglassStart","XY","faClock","Tabata","faStopwatch20","tabEM","ListPanel","TimerList","ul","Li","li","hover","Tab","SlidingBar","options","tabPos","className","TimerContext","defaultSettings","TimerProvider","setTimerType","setPercent","currentTime","setCurrentTime","currentRound","setCurrentRound","maxRound","setMaxRound","roundType","setRoundType","setWorkLength","setRestLength","setMinuteSetting","setSecondSetting","timerActive","setTimerActive","btnActive","setBtnActive","roundTime","setRoundTime","resetFlag","setResetFlag","fastForwardFlag","setFastForwardFlag","congratsFlag","setCongratsFlag","queuePos","setQueuePos","queueActive","setQueueActive","pauseFlag","setPauseFlag","easyRoundTime","secondsSetting","calcRoundTime","setPTime","getTimerFromQueue","nextRound","timerFinished","QueueFinished","id","setInterval","count","clearInterval","toggleTimer","TimerText","p","RoundText","RoundTypeText","TextDisplay","displayRound","displayRoundType","widthEm","TopRow","BottomButtonRow","Timer","buttonSize","getCircleSize","FlexBox","ActiveQueue","editHandler","page","setPage","setTabPos","QueueViewContainer","App","NavContainer","SubLabel","Div","defaultSetting","Settings","addHandler","setRoundSetting","onlyNumber","test","key","preventDefault","name","placeholder","onKeyPress","onChange","parseInt","target","SettingContainer","addOptions","AddView","to","path","DocumentationView","QueueView","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bc811dca.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  border: 1px solid #121212;\n  margin: 20px 0px;\n`;\n\nconst Container = styled.div`\n  padding: 20px;\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst Title = styled.div`\n  display: flex;\n  justify-content: center;\n  padding-top: 20px;\n  font-size: 1.3rem;\n`;\n\nconst RenderComponent = styled.div`\n  padding: 25px;\n  display: flex;\n  align-items: center;\n`;\n\nconst Documentation = styled.table``;\n\nclass DocumentComponent extends React.Component {\n  render() {\n    return (\n      <Wrapper>\n        <Title>{this.props.title}</Title>\n        <Container>\n          <RenderComponent>{this.props.component}</RenderComponent>\n          <Documentation>\n            <tr>\n              <th>Prop</th>\n              <th>Description</th>\n              <th>Type</th>\n              <th>Default value</th>\n            </tr>\n            {this.props.propDocs.map((doc) => {\n              return (\n                <tr>\n                  <td>{doc.prop}</td>\n                  <td>{doc.description}</td>\n                  <td>{doc.type}</td>\n                  <td>\n                    <code>{doc.defaultValue}</code>\n                  </td>\n                </tr>\n              );\n            })}\n          </Documentation>\n        </Container>\n      </Wrapper>\n    );\n  }\n}\n\nexport default DocumentComponent;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst primaryColor = \"#ffa2bf\";\n\nconst sizeMapping = {\n  small: 10,\n  medium: 14,\n  large: 20,\n};\n\nconst Container = styled.div`\n  animation: spin 1.5s linear infinite;\n\n  @-moz-keyframes spin {\n    100% {\n      -moz-transform: rotate(360deg);\n    }\n  }\n  @-webkit-keyframes spin {\n    100% {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n  @keyframes spin {\n    100% {\n      -webkit-transform: rotate(360deg);\n      transform: rotate(360deg);\n    }\n  }\n`;\n\nconst Dot = styled.span`\n  display: block;\n  width: ${(props) => props.size}px;\n  height: ${(props) => props.size}px;\n  background-color: ${(props) => props.color};\n  border-radius: 100%;\n  transform: scale(0.75);\n  transform-origin: 50% 50%;\n  opacity: 0.3;\n  animation: wobble 1s ease-in-out infinite;\n\n  @keyframes wobble {\n    0% {\n      border-radius: 25%;\n    }\n    100% {\n      border-radius: 100%;\n    }\n  }\n`;\n\nconst DotGroup = styled.div`\n  display: flex;\n`;\n\nclass Loading extends React.Component {\n  render() {\n    const size = sizeMapping[this.props.size];\n    const { color } = this.props;\n\n    return (\n      <Container>\n        <DotGroup>\n          <Dot size={size} color={color} />\n          <Dot size={size} color={color} />\n        </DotGroup>\n        <DotGroup>\n          <Dot size={size} color={color} />\n          <Dot size={size} color={color} />\n        </DotGroup>\n      </Container>\n    );\n  }\n}\n\nLoading.propTypes = {\n  size: PropTypes.oneOf([\"small\", \"medium\", \"large\"]),\n  color: PropTypes.string,\n};\n\nLoading.defaultProps = {\n  size: \"medium\",\n  color: primaryColor,\n};\n\nexport default Loading;\n","import React from \"react\";\nimport styled, { keyframes } from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faPlay,\n  faPause,\n  faFastForward,\n  faUndo,\n  faCog,\n  faCheck,\n  faTimes,\n  faArrowRight,\n  faArrowLeft,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nconst panelBackground = \"#0f242e\";\nconst transitionCurve = \"0.8s cubic-bezier(0.81, -0.21, 0.24, 1.09)\";\n\nconst icons = {\n  play: faPlay,\n  pause: faPause,\n  \"fast-forward\": faFastForward,\n  reset: faUndo,\n  setting: faCog,\n  save: faCheck,\n  x: faTimes,\n  right: faArrowRight,\n  left: faArrowLeft,\n};\n\nconst colors = {\n  play: \"#15cb61\",\n  reset: \"#EF2D56\",\n  pause: \"#ED7D3A\",\n  \"fast-forward\": \"#5398BE\",\n  setting: \"#CB9173\",\n  save: \"#15cb61\",\n  x: \"#EF2D56\",\n  right: \"#a80874\",\n  left: \"#a80874\",\n};\n\nconst CircleButton = styled.div`\n  height: ${(props) => props.size}px;\n  width: ${(props) => props.size}px;\n  position: relative;\n  display: table-cell;\n  vertical-align: middle;\n  border-radius: 50%;\n  cursor: pointer;\n  transition: all 0.5s;\n  opacity: 1;\n  box-shadow: 0 0 0 0 rgba(255, 255, 255, 1);\n  text-align: center;\n  z-index: 1;\n\n  button {\n    position: absolute;\n  }\n  &::before,\n  &::after {\n    content: \"\";\n    position: absolute;\n    top: 0;\n    left: 0;\n    height: 100%;\n    width: 100%;\n    transition: all 0.25s ease;\n    border-radius: 50%;\n  }\n\n  &::after {\n    box-shadow: inset 0 0 0 ${(props) => (props.border ? 2 : 0)}px\n      ${(props) => colors[props.icon]};\n  }\n\n  &::before {\n    background: ${(props) => colors[props.icon]};\n    box-shadow: inset 0 0 0 ${(props) => props.size}px ${panelBackground};\n  }\n\n  &:hover::before {\n    box-shadow: inset 0 0 0 0px ${panelBackground};\n  }\n\n  svg {\n    position: relative;\n    font-size: ${(props) => props.size / 2}px;\n    color: white;\n  }\n`;\n\nconst Pulse = keyframes`\n  70% {\n    box-shadow: 0 0 0 25px rgba(255, 255, 255, 0);\n  }\n  100% {\n    box-shadow: 0 0 0 0 rgba(255, 255, 255, 0);\n  }\n`;\n\nconst Wrapper = styled.div`\n  position: absolute;\n  height: ${(props) => props.size}px;\n  width: ${(props) => props.size}px;\n  left: ${(props) => props.left}%;\n  top: ${(props) => props.top}%;\n  transition: ${transitionCurve};\n  margin-left: -35px;\n\n  .pulse {\n      animation: ${Pulse};\n      animation-iteration-count: 1;\n      animation-duration: 0.5s;\n    }\n  & > div {\n    box-shadow: 0 0 0 0 rgba(255, 255, 255, .7);\n    border-radius: 50%;\n  }\n  }\n`;\n\nconst Button = ({ icon, onClick, left, top, size, border }) => {\n  const addPulse = (e) => {\n    e.currentTarget.classList.add(\"pulse\");\n  };\n\n  const removePulse = (e) => {\n    e.currentTarget.classList.remove(\"pulse\");\n  };\n\n  return (\n    <Wrapper top={top} left={left} size={size}>\n      <div onClick={(e) => addPulse(e)} onAnimationEnd={(e) => removePulse(e)}>\n        <div onClick={onClick}>\n          <CircleButton icon={icon} size={size} border={border}>\n            <FontAwesomeIcon icon={icons[icon]} />\n          </CircleButton>\n        </div>\n      </div>\n    </Wrapper>\n  );\n};\n\nButton.propTypes = {\n  icon: PropTypes.oneOf([\n    \"play\",\n    \"pause\",\n    \"reset\",\n    \"save\",\n    \"setting\",\n    \"fast-forward\",\n    \"x\",\n    \"right\",\n    \"left\",\n  ]),\n  left: PropTypes.number,\n  top: PropTypes.number,\n  border: PropTypes.bool,\n  onClick: PropTypes.func,\n  size: PropTypes.number,\n};\n\nexport default Button;\n","// Add helpers here. This is usually code that is just JS and not React code. Example: write a function that\n// calculates number of minutes when passed in seconds. Things of this nature that you don't want to copy/paste\n// everywhere.\n\n//Calculates the radius attribute to give to the svg circle\nexport function calcRadius(size, strokeWidth) {\n  return size / 2 - strokeWidth * 2;\n}\n\n//Calculates circumference of circle\nexport function calcCircum(radius) {\n  return radius * 2 * Math.PI;\n}\n\n//Calculates the dash offset to fill the progress circle with appropiate percentage\nexport function calcOffset(radius, percent) {\n  const circum = calcCircum(radius);\n\n  return circum - (circum * percent) / 100;\n}\n\n//Formats single digit numbers to always have two digits\nexport function formatNumber(int) {\n  return int.toLocaleString(\"en-US\", {\n    minimumIntegerDigits: 2,\n    useGrouping: false,\n  });\n}\n\n//Takes an argument in the form of milliseconds and outputs to format MM:SS:MS\nexport function convertFromMs(time) {\n  const milliseconds = (time % 1000) / 10;\n  const seconds = Math.floor((time / 1000) % 60);\n  const minutes = Math.floor((time / (1000 * 60)) % 60);\n\n  return { minutes: minutes, seconds: seconds, milliseconds: milliseconds };\n}\n\n//Mapping of Timer type to tab position values\nexport const tabMap = {\n  Stopwatch: \"0em\",\n  Countdown: \"10em\",\n  XY: \"20em\",\n  Tabata: \"30em\",\n};\n\n//Calculates percentage based on timer type and timers given (expecting an object with second argument with times)\nexport function calcRoundTime(\n  timerType,\n  minuteSetting,\n  secondsSetting,\n  workLength,\n  restLength,\n  roundType\n) {\n  if (timerType === \"Stopwatch\" || timerType === \"Countdown\") {\n    return minuteSetting * 60000 + secondsSetting * 1000;\n  }\n\n  if (timerType === \"XY\") {\n    return minuteSetting * 60000 + secondsSetting * 1000;\n  }\n\n  if (timerType === \"Tabata\") {\n    if (roundType === \"Work\") {\n      return workLength * 1000;\n    } else {\n      return restLength * 1000;\n    }\n  }\n  return 0;\n}\n\nexport function calcTotalTime(\n  timerType,\n  minuteSetting,\n  secondSetting,\n  workLength,\n  restLength,\n  roundSetting\n) {\n  if (timerType === \"Stopwatch\" || timerType === \"Countdown\") {\n    return minuteSetting * 60000 + secondSetting * 1000;\n  }\n\n  if (timerType === \"XY\") {\n    return (minuteSetting * 60000 + secondSetting * 1000) * roundSetting;\n  }\n\n  if (timerType === \"Tabata\") {\n    return (workLength * 1000 + restLength * 1000) * roundSetting;\n  }\n}\n\n//Generate button size based on window size\nexport function getButtonSize() {\n  const width = window.innerWidth;\n\n  if (width <= 1000) {\n    return 60;\n  }\n  if (width <= 1300) {\n    return 65;\n  }\n  if (width <= 1600) {\n    return 65;\n  }\n  return 70;\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\n\nimport { calcRadius, calcCircum, calcOffset } from \"../../utils/helpers\";\n\nconst progressColor = \"#a80874\";\n\nconst ProgressCircle = styled.circle`\n  stroke: ${(props) => props.color};\n  fill: transparent;\n  cx: ${(props) => props.c}px;\n  cy: ${(props) => props.c}px;\n  stroke-dasharray: ${(props) => calcCircum(props.r)};\n  stroke-dashoffset: ${(props) => calcOffset(props.r, props.percent)};\n  transform: rotate(-90deg);\n  transform-origin: 50% 50%;\n  transition: all 0.3s ease-out;\n`;\n\nconst Circle = ({ size, strokeWidth, percent }) => {\n  return (\n    <svg width={size} height={size}>\n      <ProgressCircle\n        r={calcRadius(size, strokeWidth)}\n        c={size / 2}\n        strokeWidth={strokeWidth}\n        percent={100}\n        color={\"white\"}\n      />\n      <ProgressCircle\n        r={calcRadius(size, strokeWidth)}\n        c={size / 2}\n        strokeWidth={strokeWidth + 1}\n        percent={percent}\n        color={progressColor}\n      />\n    </svg>\n  );\n};\n\nCircle.propType = {\n  size: PropTypes.number,\n  strokeWidth: PropTypes.number,\n  percent: PropTypes.number,\n};\n\nCircle.defaultProps = {\n  size: 450,\n  strokeWidth: 20,\n};\n\nexport default Circle;\n","import styled from \"styled-components\";\n\nconst Panel = styled.div`\n  margin-top: 1em;\n  margin-bottom: 2em;\n  box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);\n  text-align: center;\n  padding-top: 3em;\n  padding-bottom: 3em;\n  border-radius: 1em;\n\n  @media (min-width: 1600px) {\n    margin-bottom: 3em;\n  }\n\n  @media (min-width: 1900px) {\n    margin-bottom: 4em;\n  }\n`;\n\nexport default Panel;\n","import styled from \"styled-components\";\n\nconst Label = styled.label`\n  color: white;\n  font-size: 2em;\n`;\n\nexport default Label;\n","import styled from \"styled-components\";\n\nconst Input = styled.input`\n  width: 60%;\n  margin-top: 2em;\n  margin-bottom: 1em;\n  color: #a80874;\n  border-radius: 2em;\n  padding: 1em;\n  font-family: Segoe UI;\n  font-weight: bold;\n  padding-right: 3em;\n  margin-right: 1em;\n  flex: 1;\n  @media (max-width: 1600px) {\n    font-size: 12px;\n  }\n`;\n\nexport default Input;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faPlusSquare,\n  faBiking,\n  faHammer,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nimport Panel from \"./Panel\";\nimport Label from \"./Label\";\n\nconst icons = {\n  Start: faBiking,\n  Add: faPlusSquare,\n  Edit: faHammer,\n};\n\nconst colors = {\n  Start: \"#15cb61\",\n  Add: \"#ED7D3A\",\n  Edit: \"#a80874\",\n};\n\nconst ButtonLabel = styled(Label)`\n  font-size: 1.5em;\n`;\n\nconst Container = styled(Panel)`\n  background-color: #0f242e;\n  padding-top: 2em;\n  padding-bottom: 2em;\n  padding-left: 4em;\n  padding-right: 4em;\n  border-radius: 1em;\n  position: relative;\n  overflow: hidden;\n  z-index: 5;\n  width: 5em;\n  margin-right: 1em;\n  margin-left: 1em;\n\n  &:hover,\n  ${ButtonLabel}:hover {\n    cursor: pointer;\n  }\n\n  &::before,\n  &::after {\n    content: \"\";\n    position: absolute;\n    top: 0;\n    left: 0;\n    height: 100%;\n    width: 100%;\n    transition: all 0.3s ease;\n    border-radius: 1em;\n  }\n\n  svg {\n    margin-right: 0.5em;\n  }\n\n  & .fa-biking {\n    margin-right: 0.2em;\n  }\n\n  & .fa-plus-square {\n    margin-right: 0.2em;\n  }\n\n  font-size: 13px;\n\n  &::after {\n  }\n\n  &::before {\n    border-radius: 0;\n    box-shadow: inset 0 0 0 70px ${(props) => props.colors};\n    margin-left: ${(props) => (props.enterFrom === \"Left\" ? -100 : 100)}%;\n    z-index: -1;\n  }\n\n  &:hover::before {\n    margin-left: 0;\n  }\n`;\n\nconst SquareButton = ({ type, clickHandler, enterFrom }) => {\n  return (\n    <Container\n      colors={colors[type]}\n      type={type}\n      enterFrom={enterFrom}\n      onClick={clickHandler}\n    >\n      <ButtonLabel>\n        <FontAwesomeIcon icon={icons[type]} />\n        {type}\n      </ButtonLabel>\n    </Container>\n  );\n};\n\nSquareButton.propTypes = {\n  type: PropTypes.oneOf([\"Start\", \"Add\", \"Edit\"]),\n  clickHandler: PropTypes.func,\n  enterFrom: PropTypes.oneOf([\"Left\", \"Right\"]),\n};\n\nexport default SquareButton;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\n\nimport Panel from \"./Panel\";\nimport Label from \"./Label\";\nimport Button from \"./Button\";\nimport Circle from \"./Circle\";\n\nconst panel_height = 18;\nconst panel_width = 14;\n\nconst Flipper = styled(Panel)`\n  transition: 0.5s;\n  transform-style: preserve-3d;\n  position: relative;\n  height: ${panel_height}em;\n  width: ${panel_width}em;\n  margin: 0;\n  padding: 0;\n`;\n\nconst FlipContainer = styled.div`\n  @media (max-width: 1200px) {\n    font-size: 12px;\n  }\n\n  font-size: 14px;\n  perspective: 1000px;\n\n  &:hover ${Flipper} {\n    transform: rotateY(${(props) => (props.disableHover ? 0 : 180)}deg);\n  }\n`;\n\nconst FrontSide = styled.div`\n  -webkit-backface-visibility: hidden;\n  background-color: #0f242e;\n  position: absolute;\n  top: 0;\n  left: 0;\n  border-radius: 1em;\n  height: ${panel_height}em;\n  width: ${panel_width}em;\n  padding-top: 1em;\n  z-index: 2;\n  transform: rotateY(0deg);\n`;\n\nconst BackSide = styled(FrontSide)`\n  background-color: #0f242e;\n  transform: rotateY(180deg);\n  height: ${panel_height + 1}em;\n  width: ${panel_width}em;\n  overflow: hidden;\n  border-radius: 1em;\n  padding-top: 0;\n  z-index: -1;\n`;\n\nconst TopButtonRow = styled.div`\n  margin-top: 1em;\n  margin-right: 1em;\n  position: relative;\n  height: 4.5em;\n  margin-bottom: 1em;\n`;\n\nconst FlexDiv = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: baseline;\n`;\n\nconst PanelLabel = styled(Label)`\n  font-size: 1.4em;\n  margin-bottom: 1em;\n  margin-left: 1em;\n  margin-right: 1em;\n`;\n\nconst RelDiv = styled.div`\n  position: relative;\n  margin-top: 1em;\n`;\n\nconst QueueTimerPanel = ({\n  timerType,\n  secondSetting,\n  minuteSetting,\n  roundSetting,\n  workLength,\n  restLength,\n  removeHandler,\n  disableHover,\n}) => {\n  const showRounds = timerType === \"XY\" || timerType === \"Tabata\";\n  const showRoundType = timerType === \"Tabata\";\n\n  return (\n    <FlipContainer disableHover={disableHover}>\n      <Flipper>\n        <FrontSide>\n          <Label>{timerType}</Label>\n          <RelDiv>\n            <Circle size={160} strokeWidth={10} percent={100} />\n          </RelDiv>\n        </FrontSide>\n        <BackSide>\n          <TopButtonRow>\n            <Button\n              icon={\"x\"}\n              top={0}\n              left={95}\n              size={50}\n              border={true}\n              onClick={removeHandler}\n            />\n          </TopButtonRow>\n          {showRounds && (\n            <FlexDiv>\n              <PanelLabel>Rounds: </PanelLabel>\n              <PanelLabel>{roundSetting}</PanelLabel>\n            </FlexDiv>\n          )}\n          {!showRoundType && (\n            <FlexDiv>\n              <PanelLabel>Minutes: </PanelLabel>\n              <PanelLabel>{minuteSetting} </PanelLabel>\n            </FlexDiv>\n          )}\n          {!showRoundType && (\n            <FlexDiv>\n              <PanelLabel>Seconds: </PanelLabel>\n              <PanelLabel>{secondSetting}</PanelLabel>\n            </FlexDiv>\n          )}\n          {showRoundType && (\n            <FlexDiv>\n              <PanelLabel>Work (s): </PanelLabel>\n              <PanelLabel>{workLength}</PanelLabel>\n            </FlexDiv>\n          )}\n          {showRoundType && (\n            <FlexDiv>\n              <PanelLabel>Rest (s): </PanelLabel>\n              <PanelLabel>{restLength}</PanelLabel>\n            </FlexDiv>\n          )}\n        </BackSide>\n      </Flipper>\n    </FlipContainer>\n  );\n};\n\nQueueTimerPanel.propTypes = {\n  timerType: PropTypes.oneOf([\"Stopwatch\", \"Countdown\", \"XY\", \"Tabata\"]),\n  secondSetting: PropTypes.number,\n  minuteSetting: PropTypes.number,\n  roundSetting: PropTypes.number,\n  workLength: PropTypes.number,\n  restLength: PropTypes.number,\n  removeHandler: PropTypes.func,\n  disableHover: PropTypes.bool,\n};\n\nexport default QueueTimerPanel;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport DocumentComponent from \"../components/documentation/DocumentComponent\";\n\nimport Loading from \"../components/generic/Loading\";\nimport Button from \"../components/generic/Button\";\nimport Circle from \"../components/generic/Circle\";\nimport Panel from \"../components/generic/Panel\";\nimport Label from \"../components/generic/Label\";\nimport Input from \"../components/generic/Input\";\nimport SquareButton from \"../components/generic/SquareButton\";\nimport QueueTimerPanel from \"../components/generic/QueueTimerPanel\";\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 100%;\n`;\n\nconst Title = styled.div`\n  font-size: 2rem;\n`;\n\nclass Documentation extends React.Component {\n  render() {\n    return (\n      <Container>\n        <div>\n          <Title>Documentation</Title>\n          <DocumentComponent\n            title=\"Loading spinner \"\n            component={<Loading />}\n            propDocs={[\n              {\n                prop: \"size\",\n                description: \"Changes the size of the loading spinner\",\n                type: \"string\",\n                defaultValue: \"medium\",\n              },\n            ]}\n          />\n          <DocumentComponent\n            title=\"Button \"\n            component={\n              <div style={{ position: \"relative\" }}>\n                <Button icon=\"play\" size={60} border={false} />\n              </div>\n            }\n            propDocs={[\n              {\n                prop: \"icon\",\n                description: \"Changes color and icon depending on input\",\n                type: \"string\",\n                defaultValue: \"N/A\",\n              },\n              {\n                prop: \"left\",\n                description: \"changes css left property for animation purposes\",\n                type: \"number\",\n                defaultValue: \"N/A\",\n              },\n              {\n                prop: \"top\",\n                description: \"Changes top position for animation purposes\",\n                type: \"number\",\n                defaultValue: \"N/A\",\n              },\n              {\n                prop: \"size\",\n                description: \"px value of width and height\",\n                type: \"number\",\n                defaultValue: \"N/A\",\n              },\n              {\n                prop: \"border\",\n                description: \"Determines if button has colored border or not\",\n                type: \"boolean\",\n                defaultValue: \"N/A\",\n              },\n            ]}\n          />\n          <DocumentComponent\n            title=\"Circle \"\n            component={<Circle size={100} strokeWidth={10} />}\n            propDocs={[\n              {\n                prop: \"size\",\n                description:\n                  \"Determines the width and height of the svg element\",\n                type: \"int\",\n                defaultValue: \"450\",\n              },\n              {\n                prop: \"strokeWidth\",\n                description: \"Determines the thickness of the progress bar\",\n                type: \"int\",\n                defaultValue: \"20\",\n              },\n            ]}\n          />\n          <DocumentComponent\n            title=\"panel \"\n            component={<Panel>Panel Content</Panel>}\n            propDocs={[\n              {\n                prop: \"N/A\",\n                description: \"Elevated div for paneling look\",\n                type: \"N/A\",\n                defaultValue: \"N/A\",\n              },\n            ]}\n          />\n          <DocumentComponent\n            title=\"Label \"\n            component={<Label>Label</Label>}\n            propDocs={[\n              {\n                prop: \"N/A\",\n                description: \"White Styled Label\",\n                type: \"N/A\",\n                defaultValue: \"N/A\",\n              },\n            ]}\n          />\n          <DocumentComponent\n            title=\"Input \"\n            component={<Input></Input>}\n            propDocs={[\n              {\n                prop: \"N/A\",\n                description: \"Styled input for taking settings options\",\n                type: \"N/A\",\n                defaultValue: \"N/A\",\n              },\n            ]}\n          />\n          <DocumentComponent\n            title=\"Square Button \"\n            component={\n              <div style={{ position: \"relative\" }}>\n                <SquareButton type={\"Start\"} enterFrom={\"Left\"} />\n              </div>\n            }\n            propDocs={[\n              {\n                prop: \"type\",\n                description: \"Determines the text, color, and icon of Button \",\n                type: \"String\",\n                defaultValue: \"N/A\",\n              },\n              {\n                prop: \"clickHandler\",\n                description: \"event handler\",\n                type: \"function\",\n                defaultValue: \"N/A\",\n              },\n              {\n                prop: \"enterFrom\",\n                description:\n                  \"Determines which side the colored animation slides in from\",\n                type: \"String\",\n                defaultValue: \"N/A\",\n              },\n            ]}\n          />\n          <DocumentComponent\n            title=\"QueueTimerPanel \"\n            component={\n              <div style={{ position: \"relative\" }}>\n                <QueueTimerPanel\n                  timerType={\"Tabata\"}\n                  roundSetting={2}\n                  workLength={3}\n                  restLength={5}\n                />\n              </div>\n            }\n            propDocs={[\n              {\n                prop: \"timerType\",\n                description:\n                  \"Type of timer to determine what settings to show on backside \",\n                type: \"String\",\n                defaultValue: \"N/A\",\n              },\n              {\n                prop: \"secondSetting\",\n                description: \"Shows how many seconds timer has\",\n                type: \"function\",\n                defaultValue: \"N/A\",\n              },\n              {\n                prop: \"minuteSetting\",\n                description: \"Shows how many minutes timer has\",\n                type: \"String\",\n                defaultValue: \"N/A\",\n              },\n              {\n                prop: \"roundSetting\",\n                description: \"Shows how many rounds timer has\",\n                type: \"String\",\n                defaultValue: \"N/A\",\n              },\n              {\n                prop: \"workLength\",\n                description: \"Shows how long the work round is\",\n                type: \"String\",\n                defaultValue: \"N/A\",\n              },\n              {\n                prop: \"restLength\",\n                description: \"Shows how long the rest round is\",\n                type: \"String\",\n                defaultValue: \"N/A\",\n              },\n              {\n                prop: \"removeHandler\",\n                description:\n                  \"Event handler for removing panel when exit button is clicked\",\n                type: \"function\",\n                defaultValue: \"N/A\",\n              },\n              {\n                prop: \"disableHover\",\n                description: \"Disables flip on hover\",\n                type: \"Boolean\",\n                defaultValue: \"N/A\",\n              },\n            ]}\n          />\n        </div>\n      </Container>\n    );\n  }\n}\n\nexport default Documentation;\n","import React, { useState } from \"react\";\n\nimport { calcTotalTime } from \"../../utils/helpers\";\n\nexport const QueueContext = React.createContext({});\n\nconst QueueProvider = ({ children }) => {\n  const [timerQueue, setTimerQueue] = useState([]);\n  const [totalTime, setTotalTime] = useState(0);\n  const [totalLength, setTotalLength] = useState(0);\n\n  //Exposed to context subscribers to add a timer to the queue\n  const addTimer = (\n    secondSetting,\n    minuteSetting,\n    roundSetting,\n    workLength,\n    restLength,\n    timerType\n  ) => {\n    let queue = timerQueue;\n    const newTimer = {\n      secondSetting: secondSetting,\n      minuteSetting: minuteSetting,\n      roundSetting: roundSetting,\n      workLength: workLength,\n      restLength: restLength,\n      timerType: timerType,\n    };\n\n    setTotalTime(\n      totalTime +\n        calcTotalTime(\n          timerType,\n          minuteSetting,\n          secondSetting,\n          workLength,\n          restLength,\n          roundSetting\n        )\n    );\n    queue.push(newTimer);\n    setTimerQueue(queue);\n    setTotalLength(totalLength + 1);\n  };\n\n  //Returns a set of timers from a specific point in queue\n  const getTimers = (index, amount) => {\n    const timers = [];\n\n    for (let i = index; i < index + amount; i++) {\n      if (timerQueue[i] !== undefined) {\n        timers.push(timerQueue[i]);\n      }\n    }\n\n    return timers;\n  };\n\n  //Removes timer at given index\n  const removeTimer = (index) => {\n    const timer = timerQueue[index];\n\n    setTotalTime(\n      totalTime -\n        calcTotalTime(\n          timer.timerType,\n          timer.minuteSetting,\n          timer.secondSetting,\n          timer.workLength,\n          timer.restLength,\n          timer.roundSetting\n        )\n    );\n    timerQueue.splice(index, 1);\n    setTimerQueue(timerQueue);\n    setTotalLength(totalLength - 1);\n  };\n\n  return (\n    <QueueContext.Provider\n      value={{\n        addTimer,\n        timerQueue,\n        getTimers,\n        removeTimer,\n        totalLength,\n        totalTime,\n      }}\n    >\n      {children}\n    </QueueContext.Provider>\n  );\n};\n\nexport default QueueProvider;\n","import { keyframes } from \"styled-components\";\n\nconst FadeOut = keyframes`\n  0% {\n    opacity: 1;\n  }\n  100% {\n    opacity: 0;\n  }\n`;\n\nexport default FadeOut;\n","import React, { useContext, useEffect, useState, useRef } from \"react\";\nimport styled, { keyframes, css } from \"styled-components\";\n\nimport { QueueContext } from \"../context/QueueContext\";\nimport QueueTimerPanel from \"./QueueTimerPanel\";\nimport Button from \"./Button\";\nimport FadeOut from \"./FadeOut\";\n\nconst Slide = (left, slideDirection) => keyframes`\n  100% {\n    left: ${slideDirection === \"left\" ? left - 25 : left + 25}%;\n  }\n`;\n\nconst Container = styled.div`\n  position: relative;\n  width: 100%;\n  height: 19em;\n`;\n\nconst PanelContainer = styled.div`\n  position: absolute;\n  left: ${(props) => props.left}%;\n  transform: translate(-50%, -50%);\n  top: 50%;\n\n  animation-name: ${(props) => {\n    if (props.animate) {\n      if (props.keyFrame === \"Fade\") {\n        return css`\n          ${FadeOut}\n        `;\n      } else {\n        return css`\n          ${Slide(props.left, props.slideDirection)}\n        `;\n      }\n    }\n  }}\n  }};\n  animation-timing-function: ease-in-out;\n  animation-duration: .6s;\n\n  animation-fill-mode: forwards;\n`;\n\nconst TimersContainer = styled.div`\n  position: absolute;\n  width: 84%;\n  left: 6%;\n`;\n\nconst InnerTimersContainer = styled.div`\n  position: relative;\n  height: 19em;\n  width: 100%;\n  overflow: hidden;\n`;\n\nconst QueueOverview = () => {\n  const { getTimers, removeTimer, totalLength } = useContext(QueueContext);\n  const [currPos, setCurrPos] = useState(0);\n  const [timers, setTimers] = useState(getTimers(0, 4));\n  const [slideFrom, setSlideFrom] = useState(4);\n  const [animateIndex, setAnimateIndex] = useState(false);\n  const [keyFrame, setKeyFrame] = useState(\"Fade\");\n  const [disableHover, setDisableHover] = useState(false);\n  const [slideDirection, setSlideDirection] = useState(\"left\");\n  const leftPositions = [-10, 15, 40, 65, 90, 115];\n  const hideLeft = currPos === 0;\n  const hideRight = currPos + 4 >= totalLength;\n  const prevTotalLength = useRef(0);\n\n  //Event handler to scroll through queue\n  const changePos = (direction) => {\n    if (direction === \"left\") {\n      setSlideDirection(\"right\");\n      setCurrPos(currPos - 4);\n    } else if (direction === \"right\") {\n      setSlideDirection(\"left\");\n      setCurrPos(currPos + 4);\n    }\n    //Sliding animation\n    setKeyFrame(\"Slide\");\n    setSlideFrom(0);\n  };\n\n  //Set current position to last page whenever a new timer is added\n  useEffect(() => {\n    //Only execute if a timer was added\n    if (prevTotalLength.current < totalLength) {\n      if (totalLength % 4 !== 0) {\n        setCurrPos(4 * Math.floor(totalLength / 4));\n      } else {\n        setCurrPos(totalLength - 4);\n      }\n    }\n    prevTotalLength.current = totalLength;\n  }, [totalLength]);\n\n  //Repopulate timer list after scroll button is clicked\n  useEffect(() => {\n    setTimers(getTimers(currPos, 4));\n  }, [currPos, getTimers]);\n\n  //Handler for removing timer panel and animating fade\n  const removePanel = (index) => {\n    setAnimateIndex(index);\n    setKeyFrame(\"Fade\");\n    setSlideDirection(\"left\");\n    setDisableHover(true);\n  };\n\n  //Calculates position of each timer panel\n  const calcPosition = (index) => {\n    if (index >= slideFrom) {\n      //Sliding left to right\n      if (slideDirection === \"left\") {\n        return leftPositions[index + 2];\n      } else {\n        //Sliding right to left\n        return leftPositions[index];\n      }\n    } else {\n      //No slide\n      return leftPositions[index + 1];\n    }\n  };\n\n  //Calculates if current panel index should be animated\n  const shouldAnimate = (index) => {\n    //Panels affected by slide and animation\n    if (animateIndex === index || index >= slideFrom) {\n      return true;\n    }\n    return false;\n  };\n\n  //If all timers in current page get deleted move to previous full page\n  useEffect(() => {\n    if (timers.length === 0 && currPos !== 0) {\n      setCurrPos(currPos - 4);\n    }\n  }, [timers, currPos]);\n\n  useEffect(() => {}, [disableHover]);\n\n  return (\n    <Container>\n      {!hideLeft && (\n        <Button\n          icon={\"left\"}\n          top={40}\n          size={70}\n          left={5}\n          border={false}\n          onClick={() => changePos(\"left\")}\n        />\n      )}\n      <TimersContainer>\n        <InnerTimersContainer>\n          {timers.map((timer, index) => {\n            return (\n              <PanelContainer\n                slideDirection={slideDirection}\n                left={calcPosition(index)}\n                key={index + currPos}\n                animate={shouldAnimate(index)}\n                i={index}\n                keyFrame={keyFrame}\n                onAnimationEnd={() => {\n                  //Panel Fading and sliding animation logic\n                  if (keyFrame === \"Fade\") {\n                    removeTimer(animateIndex + currPos);\n                    setAnimateIndex(false);\n                    setSlideFrom(index);\n                    setKeyFrame(\"Slide\");\n                    setTimers(getTimers(currPos, 4));\n                  } else {\n                    if (index === timers.length - 1) {\n                      setKeyFrame(\"Fade\");\n                      setSlideFrom(4);\n                      setDisableHover(false);\n                    }\n                  }\n                  //When last animation is complete let user be able to flip cards again\n                  if (index === timers.length - 1) {\n                    setDisableHover(false);\n                  }\n                }}\n              >\n                <QueueTimerPanel\n                  timerType={timer.timerType}\n                  secondSetting={timer.secondSetting}\n                  minuteSetting={timer.minuteSetting}\n                  roundSetting={timer.roundSetting}\n                  workLength={timer.workLength}\n                  restLength={timer.restLength}\n                  removeHandler={() => {\n                    removePanel(index);\n                  }}\n                  disableHover={disableHover}\n                />\n              </PanelContainer>\n            );\n          })}\n        </InnerTimersContainer>\n      </TimersContainer>\n      {!hideRight && (\n        <Button\n          icon={\"right\"}\n          top={40}\n          size={70}\n          left={95}\n          border={false}\n          onClick={() => changePos(\"right\")}\n        />\n      )}\n    </Container>\n  );\n};\n\nexport default QueueOverview;\n","import { keyframes } from \"styled-components\";\n\nconst FadeIn = keyframes`\n    0% {\n        opacity: 0;\n    }\n    100% {\n        opacity: 1;\n    }\n`;\n\nexport default FadeIn;\n","import React, { useContext, useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nimport Panel from \"./Panel\";\nimport Label from \"./Label\";\nimport { QueueContext } from \"../context/QueueContext\";\nimport QueueOverview from \"./QueueOverview\";\nimport SquareButton from \"./SquareButton\";\nimport { convertFromMs } from \"../../utils/helpers\";\nimport FadeIn from \"./FadeIn\";\n\nconst TitlePanel = styled(Panel)`\n  background-color: #0f242e;\n  padding-left: 4em;\n  padding-right: 4em;\n  padding-top: 1em;\n  padding-bottom: 1em;\n  @media (max-width: 1200px) {\n    font-size: 14px;\n  }\n`;\n\nconst SubTitle = styled(Label)`\n  font-size: 1.8em;\n`;\n\nconst Flex = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  animation: ${FadeIn} ease 0.5s;\n  animation-fill-mode: forwards;\n  @media (min-width: 1600px) {\n    width: 80%;\n  }\n  @media (min-width: 1900px) {\n    width: 70%;\n  }\n`;\n\nconst ButtonsContainer = styled.div`\n  display: flex;\n  white-space: nowrap;\n  width: 100%;\n  justify-content: center;\n  margin-top: 2em;\n  transition: -webkit-flex 250ms linear;\n`;\n\nconst NonActiveQueue = ({ startHandler }) => {\n  const { totalLength, totalTime } = useContext(QueueContext);\n  const [showStart, setShowStart] = useState(false);\n  const formattedTime = convertFromMs(totalTime);\n  const history = useHistory();\n  const showTime = formattedTime.minutes !== 0 || formattedTime.seconds !== 0;\n\n  useEffect(() => {\n    if (totalLength > 0) {\n      setShowStart(true);\n    } else {\n      setShowStart(false);\n    }\n  }, [totalLength]);\n\n  return (\n    <Flex>\n      <TitlePanel>\n        <Label>Workout Queue</Label>\n        <div>\n          {showTime && (\n            <SubTitle>\n              Total Time:{\" \"}\n              {formattedTime.minutes === 0 ? \"\" : `${formattedTime.minutes}M`}{\" \"}\n              {formattedTime.seconds === 0 ? \"\" : `${formattedTime.seconds}S`}\n            </SubTitle>\n          )}\n        </div>\n      </TitlePanel>\n      <QueueOverview />\n      <ButtonsContainer>\n        {showStart && (\n          <SquareButton\n            type={\"Start\"}\n            enterFrom={\"Left\"}\n            clickHandler={startHandler}\n          ></SquareButton>\n        )}\n        <SquareButton\n          type={\"Add\"}\n          enterFrom={\"Right\"}\n          clickHandler={() => history.push(\"/add\")}\n        ></SquareButton>\n      </ButtonsContainer>\n    </Flex>\n  );\n};\n\nNonActiveQueue.propTypes = {\n  startHandler: PropTypes.func,\n};\n\nexport default NonActiveQueue;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faStopwatch,\n  faClock,\n  faHourglassStart,\n  faStopwatch20,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nimport Panel from \"./Panel\";\n\nconst transitionCurve = \"0.8s cubic-bezier(0.81, -0.21, 0.24, 1.09)\";\nconst iconsList = {\n  Stopwatch: faStopwatch,\n  Countdown: faHourglassStart,\n  XY: faClock,\n  Tabata: faStopwatch20,\n};\nconst tabEM = {\n  1: \"0em\",\n  2: \"10em\",\n  3: \"20em\",\n  4: \"30em\",\n};\n\nconst ListPanel = styled(Panel)`\n  padding: 0;\n  width: 40em;\n  height: 4.05em;\n  position: relative;\n  background-color: #0f242e;\n  font-size: 16px;\n  @media (max-width: 1000px) {\n    font-size: 15px;\n  }\n  @media (min-width: 1200px) {\n    margin-bottom: 3em;\n  }\n  @media (min-width: 1600px) {\n    margin-bottom: 4em;\n  }\n`;\n\nconst TimerList = styled.ul`\n  list-style: none;\n  display: flex;\n  position: absolute;\n  width: 100%;\n  justify-content: center;\n  padding: 0;\n  margin: 0;\n  z-index: 2;\n\n  & .fa-clock,\n  & .fa-hourglass-start {\n    font-size: 0.87em;\n    margin-right: 0.5em;\n  }\n\n  & .fa-stopwatch-20 {\n    margin-right: 0.4em;\n  }\n\n  svg {\n    margin-right: 0.2em;\n  }\n`;\n\nconst Li = styled.li`\n  color: white;\n  font-size: 1.2em;\n  padding-top: 1em;\n  padding-bottom: 1em;\n  border-radius: 0.6em;\n  flex: 1 0 25%;\n  transition: ${transitionCurve};\n\n  :hover {\n    cursor: ${(props) => (props.hover ? \"pointer\" : \"default\")};\n  }\n\n  &&.selected {\n    color: #a80874 !important;\n    transition: ${transitionCurve};\n  }\n`;\n\nconst Tab = styled.div`\n  position: absolute;\n  width: 10em;\n  height: 100%;\n  top: 0;\n  background-color: white;\n  border-radius: 0.5em;\n  z-index: 1;\n  left: ${(props) => props.left};\n  transition: ${transitionCurve};\n`;\n\nconst SlidingBar = ({ options, tabPos, clickHandler }) => {\n  //disable hover pointer if no click handler\n  const hover = clickHandler;\n  return (\n    <ListPanel>\n      <TimerList>\n        <Li\n          onClick={() => {\n            if (!!clickHandler) {\n              clickHandler(1);\n            }\n          }}\n          className={tabPos === 1 ? \"selected\" : \"\"}\n          hover={hover}\n        >\n          {iconsList[options[0]] && (\n            <FontAwesomeIcon icon={iconsList[options[0]]} />\n          )}\n          {options[0]}\n        </Li>\n        <Li\n          onClick={() => {\n            if (!!clickHandler) {\n              clickHandler(2);\n            }\n          }}\n          className={tabPos === 2 ? \"selected\" : \"\"}\n          hover={hover}\n        >\n          {iconsList[options[1]] && (\n            <FontAwesomeIcon icon={iconsList[options[1]]} />\n          )}\n          {options[1]}\n        </Li>\n        <Li\n          onClick={() => {\n            if (!!clickHandler) {\n              clickHandler(3);\n            }\n          }}\n          className={tabPos === 3 ? \"selected\" : \"\"}\n          hover={hover}\n        >\n          {iconsList[options[2]] && (\n            <FontAwesomeIcon icon={iconsList[options[2]]} />\n          )}\n          {options[2]}\n        </Li>\n        <Li\n          onClick={() => {\n            if (!!clickHandler) {\n              clickHandler(4);\n            }\n          }}\n          className={tabPos === 4 ? \"selected\" : \"\"}\n          hover={hover}\n        >\n          {iconsList[options[3]] && (\n            <FontAwesomeIcon icon={iconsList[options[3]]} />\n          )}\n          {options[3]}\n        </Li>\n      </TimerList>\n      <Tab left={tabEM[tabPos]} />\n    </ListPanel>\n  );\n};\n\nSlidingBar.propTypes = {\n  options: PropTypes.array,\n  tabPos: PropTypes.number,\n  clickHandler: PropTypes.func,\n};\n\nexport default SlidingBar;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport { calcRoundTime } from \"../../utils/helpers\";\nimport { QueueContext } from \"./QueueContext\";\n\nexport const TimerContext = React.createContext({});\n\nconst defaultSettings = {\n  minutes: 0,\n  seconds: 20,\n  rounds: 5,\n  work: 30,\n  rest: 10,\n};\n\nconst TimerProvider = ({ children }) => {\n  const { getTimers, totalLength } = useContext(QueueContext);\n  const [timerType, setTimerType] = useState(\"Stopwatch\");\n  const [percent, setPercent] = useState(0);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [currentRound, setCurrentRound] = useState(1);\n  const [maxRound, setMaxRound] = useState(defaultSettings[\"rounds\"]);\n  const [roundType, setRoundType] = useState(\"Work\");\n  const [workLength, setWorkLength] = useState(defaultSettings[\"work\"]);\n  const [restLength, setRestLength] = useState(defaultSettings[\"rest\"]);\n  const [minuteSetting, setMinuteSetting] = useState(\n    defaultSettings[\"minutes\"]\n  );\n  const [secondSetting, setSecondSetting] = useState(\n    defaultSettings[\"seconds\"]\n  );\n  const [timerActive, setTimerActive] = useState(false);\n  const [btnActive, setBtnActive] = useState(false);\n  const [roundTime, setRoundTime] = useState(20);\n  const [resetFlag, setResetFlag] = useState(false);\n  const [fastForwardFlag, setFastForwardFlag] = useState(false);\n  const [congratsFlag, setCongratsFlag] = useState(false);\n  const [queuePos, setQueuePos] = useState(0);\n  const [queueActive, setQueueActive] = useState(false);\n  const [pauseFlag, setPauseFlag] = useState(false);\n\n  // Function to make getting the round time easier with less typing\n  const easyRoundTime = () => {\n    return calcRoundTime(\n      timerType,\n      minuteSetting,\n      secondSetting,\n      workLength,\n      restLength,\n      roundType\n    );\n  };\n\n  useEffect(() => {}, [secondSetting]);\n\n  //Sets percent and current time to settings\n  const setPTime = () => {\n    if (timerType === \"Countdown\" || timerType === \"XY\") {\n      setCurrentTime(easyRoundTime());\n      setPercent(100);\n    } else {\n      setPercent(0);\n      setCurrentTime(0);\n    }\n  };\n\n  //Grabs timer from queue and apply all settings\n  const getTimerFromQueue = (index) => {\n    const timer = getTimers(index, 1)[0];\n\n    if (timer !== undefined) {\n      setTimerType(timer.timerType);\n      setSecondSetting(timer.secondSetting);\n      setMinuteSetting(timer.minuteSetting);\n      setMaxRound(timer.roundSetting);\n      setWorkLength(timer.workLength);\n      setRestLength(timer.restLength);\n    }\n  };\n\n  //Trigger timer start/pause and calculate total time needed for percentage\n  const toggleTimer = () => {\n    if (!queueActive) {\n      setQueuePos(0);\n    } else {\n      setPauseFlag(!pauseFlag);\n    }\n    setTimerActive(!timerActive);\n    setQueueActive(true);\n    setBtnActive(true);\n    setCongratsFlag(false);\n  };\n\n  //Sets up users for the next round\n  const nextRound = (time, percent, type) => {\n    if (!!type) {\n      setRoundType(type);\n      //Only advance round if rest round is complete\n      if (roundType === \"Rest\") {\n        setCurrentRound(currentRound + 1);\n      }\n    } else {\n      setCurrentRound(currentRound + 1);\n    }\n    setRoundTime(easyRoundTime);\n    setPercent(percent);\n    setCurrentTime(time);\n  };\n\n  //Timer is finished so advance queue position\n  const timerFinished = () => {\n    setQueuePos(queuePos + 1);\n    setTimerActive(false);\n    setPTime();\n  };\n\n  //Force end of queue finish\n  const QueueFinished = (reset) => {\n    setTimerActive(false);\n    setBtnActive(false);\n    getTimerFromQueue(0, 1);\n    setPTime();\n    setQueueActive(false);\n    if (!reset) {\n      setCongratsFlag(true);\n    }\n  };\n\n  useEffect(() => {\n    //Queue is finished\n    if (queuePos === totalLength) {\n      QueueFinished();\n    } else {\n      getTimerFromQueue(queuePos, 1);\n    }\n  }, [queuePos]);\n\n  //Load first timer from queue\n  useEffect(() => {\n    if (totalLength === 1) {\n      getTimerFromQueue(queuePos);\n    }\n  }, [totalLength]);\n\n  //Anytime settings change set current time and percentage to make sure they have a fresh value\n  useEffect(() => {\n    setRoundTime(easyRoundTime);\n    setPTime();\n    setCurrentRound(1);\n    setRoundType(\"Work\");\n  }, [\n    minuteSetting,\n    secondSetting,\n    maxRound,\n    restLength,\n    workLength,\n    timerType,\n  ]);\n\n  //Fast Foward pressed\n  useEffect(() => {\n    if (fastForwardFlag) {\n      setFastForwardFlag(false);\n      setPauseFlag(false);\n      timerFinished();\n    }\n  }, [fastForwardFlag]);\n\n  //Reset Pressed\n  useEffect(() => {\n    if (resetFlag) {\n      QueueFinished(true);\n      setResetFlag(false);\n      setPauseFlag(false);\n      setQueuePos(0);\n    }\n  }, [resetFlag]);\n\n  useEffect(() => {}, [currentTime]);\n\n  //Start/pause everytime play/pause button is pushed\n  useEffect(() => {\n    //Force new set interval to be made so values are not stale by toggling timerActive off and on\n    if (queueActive) {\n      //However do not force timer to be active if pause button was clicked\n      if (!pauseFlag) {\n        setTimerActive(true);\n      }\n    } else {\n      setTimerActive(false);\n    }\n    if (timerActive && queueActive) {\n      const id = setInterval(() => {\n        if (timerType === \"Countdown\" || timerType === \"XY\") {\n          setCurrentTime((count) => count - 50);\n        } else {\n          setCurrentTime((count) => count + 50);\n        }\n      }, 50);\n      return () => {\n        clearInterval(id);\n      };\n    }\n  }, [timerActive, pauseFlag]);\n\n  //Calculate each round type and progress bar percentage\n  useEffect(() => {\n    if (timerActive) {\n      setPercent((currentTime / roundTime) * 100);\n      setRoundTime(easyRoundTime());\n    }\n  }, [currentTime, roundTime, timerActive]);\n\n  //Handle round resets/completion\n  useEffect(() => {\n    if (percent >= 100 && timerActive) {\n      //Reset state as stopwatch timer only have one round\n      if (timerType === \"Stopwatch\") {\n        timerFinished();\n      }\n      //Tabata timer round completion logic\n      if (timerType === \"Tabata\") {\n        if (roundType === \"Work\") {\n          nextRound(0, 0, \"Rest\");\n        } else {\n          if (currentRound < maxRound) {\n            nextRound(0, 0, \"Work\");\n          } else {\n            timerFinished();\n          }\n        }\n      }\n    } else if (percent <= 0 && timerActive) {\n      //Countdown ends after one round\n      if (timerType === \"Countdown\") {\n        timerFinished();\n      }\n      //XY timer round logic\n      if (timerType === \"XY\") {\n        if (currentRound < maxRound) {\n          nextRound(roundTime, 100, null);\n        } else {\n          timerFinished();\n        }\n      }\n    }\n  }, [percent]);\n  return (\n    <TimerContext.Provider\n      value={{\n        timerType,\n        percent,\n        currentTime,\n        currentRound,\n        roundType,\n        timerActive,\n        btnActive,\n        toggleTimer,\n        setResetFlag,\n        setFastForwardFlag,\n        congratsFlag,\n        queuePos,\n      }}\n    >\n      {children}\n    </TimerContext.Provider>\n  );\n};\n\nexport default TimerProvider;\n","import React, { useContext } from \"react\";\nimport styled from \"styled-components\";\n\nimport { convertFromMs, formatNumber } from \"../../utils/helpers\";\nimport { TimerContext } from \"../context/TimerContext\";\n\nconst TimerText = styled.p`\n  position: absolute;\n  margin: 0;\n  color: white;\n  top: 45%;\n  left: 50%;\n  font-size: 3em;\n  transform: translate(-50%, -50%);\n`;\n\nconst RoundText = styled(TimerText)`\n  top: 57%;\n  font-size: 1.5em;\n  font-weight: bold;\n`;\n\nconst RoundTypeText = styled(RoundText)`\n  top: 67%;\n  font-size: 1.2em;\n`;\n\nconst TextDisplay = () => {\n  const { timerType, currentTime, currentRound, roundType, congratsFlag } =\n    useContext(TimerContext);\n  const displayRound = timerType === \"XY\" || timerType === \"Tabata\";\n  const displayRoundType = timerType === \"Tabata\";\n  const time = convertFromMs(currentTime);\n\n  return (\n    <>\n      {congratsFlag && <TimerText>Nice job!</TimerText>}\n      {!congratsFlag && (\n        <TimerText>\n          {formatNumber(time.minutes)}:{formatNumber(time.seconds)}:\n          {formatNumber(time.milliseconds)}\n        </TimerText>\n      )}\n      {congratsFlag && <RoundText className=\"fadeIn2\">Try Again?</RoundText>}\n      {displayRound && !congratsFlag && (\n        <RoundText>Round {currentRound}</RoundText>\n      )}\n      {displayRoundType && !congratsFlag && (\n        <RoundTypeText>{roundType}</RoundTypeText>\n      )}\n    </>\n  );\n};\n\nexport default TextDisplay;\n","import React, { useContext } from \"react\";\nimport styled from \"styled-components\";\n\nimport Panel from \"../generic/Panel\";\nimport Circle from \"../generic/Circle\";\nimport TextDisplay from \"../generic/TextDisplay\";\nimport Button from \"../generic/Button\";\nimport { TimerContext } from \"../context/TimerContext\";\nimport { getButtonSize } from \"../../utils/helpers\";\n\n//Circle size settings\nconst circleStroke = 20;\n\nconst widthEm = 28.1;\n\nconst RelDiv = styled.div`\n  position: relative;\n`;\n\nconst TopRow = styled.div`\n  margin-top: 0;\n  margin-right: 1em;\n  position: relative;\n  height: 4.5em;\n`;\n\nconst BottomButtonRow = styled.div`\n  height: 5em;\n  position: relative;\n  margin-top: 4em;\n  width: 100%;\n`;\n\nconst Container = styled(Panel)`\n  position: relative;\n\n  width: ${widthEm}em;\n  padding-top: 0;\n  font-size: 15px;\n\n  background-color: #0f242e;\n  @media (max-width: 1900px) {\n    font-size: 13px;\n  }\n\n  @media (max-width: 1600px) {\n    font-size: 12px;\n  }\n\n  @media (max-width: 1200px) {\n    font-size: 11px;\n  }\n`;\n\nconst Timer = () => {\n  const {\n    btnActive,\n    toggleTimer,\n    timerActive,\n    setFastForwardFlag,\n    setResetFlag,\n    percent,\n  } = useContext(TimerContext);\n  const buttonSize = getButtonSize();\n\n  const getCircleSize = () => {\n    const width = window.innerWidth;\n\n    if (width <= 1200) {\n      return 11 * widthEm;\n    }\n    if (width <= 1600) {\n      return 12 * widthEm;\n    }\n    return 15 * widthEm;\n  };\n\n  return (\n    <Container>\n      <TopRow></TopRow>\n      <RelDiv>\n        <Circle\n          size={getCircleSize()}\n          strokeWidth={circleStroke}\n          percent={percent}\n        />\n        <TextDisplay />\n      </RelDiv>\n      <BottomButtonRow>\n        <Button\n          icon={\"reset\"}\n          left={btnActive ? 20 : 50}\n          top={0}\n          border={true}\n          onClick={() => {\n            setResetFlag(true);\n          }}\n          size={buttonSize}\n        />\n        <Button\n          icon={\"fast-forward\"}\n          left={btnActive ? 80 : 50}\n          top={0}\n          border={true}\n          onClick={() => setFastForwardFlag(true)}\n          size={buttonSize}\n        />\n        <Button\n          icon={timerActive ? \"pause\" : \"play\"}\n          left={50}\n          top={0}\n          border={true}\n          onClick={() => toggleTimer()}\n          size={buttonSize}\n        />\n      </BottomButtonRow>\n    </Container>\n  );\n};\n\nexport default Timer;\n","import React, { useState, useContext, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\n\nimport SlidingBar from \"./SlidingBar\";\nimport Timer from \"../timers/Timer\";\nimport { QueueContext } from \"../context/QueueContext\";\nimport SquareButton from \"./SquareButton\";\nimport { TimerContext } from \"../context/TimerContext\";\nimport FadeIn from \"./FadeIn\";\n\nconst FlexBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  animation: ${FadeIn} 0.5s ease;\n  animation-fill-mode: forwards;\n`;\n\nconst ActiveQueue = ({ editHandler }) => {\n  const { getTimers, totalLength } = useContext(QueueContext);\n  const { queuePos, setResetFlag } = useContext(TimerContext);\n  const [page, setPage] = useState(0);\n  const [tabPos, setTabPos] = useState(1);\n\n  useEffect(() => {\n    if (queuePos < totalLength) {\n      setPage(Math.floor(queuePos / 4));\n      setTabPos(tabPos + 1);\n    }\n    if (queuePos === 0) {\n      setPage(0);\n      setTabPos(1);\n    }\n  }, [queuePos]);\n\n  useEffect(() => {\n    setTabPos(1);\n  }, [page]);\n\n  //Creates an array of timers for the current page in queue\n  const getSlidingBarOptions = (queue) => {\n    return queue.map((timer) => {\n      return timer.timerType;\n    });\n  };\n\n  return (\n    <FlexBox>\n      <SlidingBar\n        options={getSlidingBarOptions(getTimers(page * 4, 4))}\n        tabPos={tabPos}\n      />\n      <Timer />\n      <SquareButton\n        type={\"Edit\"}\n        enterFrom={\"Left\"}\n        clickHandler={() => {\n          editHandler();\n          setResetFlag(true);\n        }}\n      />\n    </FlexBox>\n  );\n};\n\nActiveQueue.propTypes = {\n  editHandler: PropTypes.func,\n};\n\nexport default ActiveQueue;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport NonActiveQueue from \"../components/generic/NonActiveQueue\";\nimport ActiveQueue from \"../components/generic/ActiveQueue\";\nimport TimerProvider from \"../components/context/TimerContext\";\n\nconst QueueViewContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nfunction App() {\n  const [queueActive, setQueueActive] = useState(false);\n\n  return (\n    <TimerProvider>\n      <QueueViewContainer>\n        {queueActive ? (\n          <ActiveQueue editHandler={() => setQueueActive(false)} />\n        ) : (\n          <NonActiveQueue startHandler={() => setQueueActive(true)} />\n        )}\n      </QueueViewContainer>\n    </TimerProvider>\n  );\n}\n\nexport default App;\n","import styled from \"styled-components\";\n\nconst NavContainer = styled.div`\n  background-color: #186bf2;\n  box-shadow: 0 4px 4px rgba(0, 0, 0, 0.23);\n  @media (min-width: 1600px) {\n    margin-bottom: 2em;\n  }\n  ul {\n    margin-top: 0;\n    list-style: none;\n    padding: 1em;\n    display: flex;\n    justify-content: end;\n    color: white;\n  }\n\n  li {\n    margin-right: 1em;\n  }\n\n  li:first-child {\n    margin-right: auto;\n  }\n\n  a {\n    color: white;\n    text-decoration: none;\n  }\n\n  a:hover {\n    color: #2b193d;\n  }\n`;\n\nexport default NavContainer;\n","import styled from \"styled-components\";\n\nimport Label from \"./Label\";\n\nconst SubLabel = styled(Label)`\n  font-size: 1em;\n  text-align: left;\n  margin-left: 1em;\n  flex: 0.5;\n`;\n\nexport default SubLabel;\n","import { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nimport Button from \"./Button\";\nimport Input from \"./Input\";\nimport Label from \"./Label\";\nimport SubLabel from \"./SubLabel\";\nimport { getButtonSize } from \"../../utils/helpers\";\n\nconst Div = styled.div`\n  text-align: center;\n  height: 100%;\n`;\n\nconst FlexDiv = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: baseline;\n`;\n\nconst defaultSetting = {\n  seconds: 20,\n  minutes: 0,\n  rounds: 2,\n  workLength: 5,\n  restLength: 3,\n};\n\nconst Settings = ({ timerType, addHandler }) => {\n  const [minuteSetting, setMinuteSetting] = useState(defaultSetting.minutes);\n  const [secondSetting, setSecondSetting] = useState(defaultSetting.seconds);\n  const [roundSetting, setRoundSetting] = useState(defaultSetting.rounds);\n  const [workLength, setWorkLength] = useState(defaultSetting.workLength);\n  const [restLength, setRestLength] = useState(defaultSetting.restLength);\n  const showRounds = timerType === \"XY\" || timerType === \"Tabata\";\n  const showRoundType = timerType === \"Tabata\";\n  const history = useHistory();\n\n  //Event handler to prevent user from entering anything but a number\n  const onlyNumber = (e) => {\n    if (!/[0-9]/.test(e.key)) {\n      e.preventDefault();\n    }\n  };\n\n  return (\n    <Div>\n      <div>\n        <Label>Settings</Label>\n      </div>\n      {!showRoundType && (\n        <FlexDiv>\n          <SubLabel>Minutes: </SubLabel>\n          <Input\n            type=\"text\"\n            name=\"Minutes\"\n            placeholder=\"Minutes\"\n            onKeyPress={(e) => onlyNumber(e)}\n            onChange={(e) => setMinuteSetting(parseInt(e.target.value))}\n            value={minuteSetting}\n          />\n        </FlexDiv>\n      )}\n      {!showRoundType && (\n        <FlexDiv>\n          <SubLabel>Seconds: </SubLabel>\n          <Input\n            type=\"text\"\n            name=\"Seconds\"\n            placeholder=\"Seconds\"\n            onKeyPress={(e) => onlyNumber(e)}\n            onChange={(e) => setSecondSetting(parseInt(e.target.value))}\n            value={secondSetting}\n          />\n        </FlexDiv>\n      )}\n      {showRounds && (\n        <FlexDiv>\n          <SubLabel>Rounds: </SubLabel>\n          <Input\n            type=\"text\"\n            name=\"Rounds\"\n            placeholder=\"Total Rounds\"\n            onKeyPress={(e) => onlyNumber(e)}\n            onChange={(e) => setRoundSetting(parseInt(e.target.value))}\n            value={roundSetting}\n          />\n        </FlexDiv>\n      )}\n      {showRoundType && (\n        <FlexDiv>\n          <SubLabel>Work(seconds): </SubLabel>\n          <Input\n            type=\"text\"\n            name=\"Work\"\n            placeholder=\"Work Period\"\n            onKeyPress={(e) => onlyNumber(e)}\n            onChange={(e) => setWorkLength(parseInt(e.target.value))}\n            value={workLength}\n          />\n        </FlexDiv>\n      )}\n      {showRoundType && (\n        <FlexDiv>\n          <SubLabel>Rest(seconds): </SubLabel>\n          <Input\n            type=\"text\"\n            name=\"Rest\"\n            placeholder=\"Rest Period\"\n            onKeyPress={(e) => onlyNumber(e)}\n            onChange={(e) => setRestLength(parseInt(e.target.value))}\n            value={restLength}\n          />\n        </FlexDiv>\n      )}\n      <Button\n        icon=\"save\"\n        top={80}\n        left={50}\n        size={getButtonSize()}\n        border={true}\n        onClick={() => {\n          addHandler(\n            secondSetting,\n            minuteSetting,\n            roundSetting,\n            workLength,\n            restLength,\n            timerType\n          );\n          history.push(\"/\");\n        }}\n      />\n    </Div>\n  );\n};\n\nSettings.propTypes = {\n  timerType: PropTypes.string,\n  addHandler: PropTypes.func,\n};\n\nexport default Settings;\n","import React, { useState, useContext } from \"react\";\nimport styled from \"styled-components\";\n\nimport SlidingBar from \"../components/generic/SlidingBar\";\nimport Settings from \"../components/generic/Settings\";\nimport Panel from \"../components/generic/Panel\";\nimport { QueueContext } from \"../components/context/QueueContext\";\nimport FadeIn from \"../components/generic/FadeIn\";\n\nconst FlexBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  animation: ${FadeIn} 0.5s ease;\n  animation-fill-mode: forwards;\n`;\n\nconst SettingContainer = styled(Panel)`\n  background-color: #0f242e;\n  position: relative;\n  height: 38em;\n  width: 28.1em;\n  padding-top: 1em;\n\n  @media (max-width: 1900px) {\n    font-size: 14px;\n  }\n\n  @media (max-width: 1600px) {\n    font-size: 13px;\n  }\n\n  @media (max-width: 1200px) {\n    font-size: 12px;\n  }\n`;\n\nconst addOptions = [\"Stopwatch\", \"Countdown\", \"XY\", \"Tabata\"];\n\nconst AddView = () => {\n  const [tabPos, setTabPos] = useState(1);\n  const { addTimer } = useContext(QueueContext);\n\n  return (\n    <FlexBox>\n      <SlidingBar\n        options={addOptions}\n        tabPos={tabPos}\n        clickHandler={setTabPos}\n      />\n      <SettingContainer>\n        <Settings timerType={addOptions[tabPos - 1]} addHandler={addTimer} />\n      </SettingContainer>\n    </FlexBox>\n  );\n};\n\nexport default AddView;\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport DocumentationView from \"./views/DocumentationView\";\nimport QueueView from \"./views/QueueView\";\nimport NavContainer from \"./components/generic/NavContainer\";\nimport AddView from \"./views/AddView\";\nimport QueueProvider from \"./components/context/QueueContext\";\n\nconst Container = styled.div`\n  background: #f0f6fb;\n  height: 100vh;\n  overflow: auto;\n`;\n\nfunction App() {\n  return (\n    <Container>\n      <Router>\n        <NavContainer>\n          <nav>\n            <ul>\n              <li>Aali2537 Assignment 3</li>\n              <li>\n                <Link to=\"/\">Timers</Link>\n              </li>\n              <li>\n                <Link to=\"/docs\">Documentation</Link>\n              </li>\n            </ul>\n          </nav>\n        </NavContainer>\n        <QueueProvider>\n          <Switch>\n            <Route path=\"/add\">\n              <AddView />\n            </Route>\n            <Route path=\"/docs\">\n              <DocumentationView />\n            </Route>\n            <Route path=\"/\">\n              <QueueView />\n            </Route>\n          </Switch>\n        </QueueProvider>\n      </Router>\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}